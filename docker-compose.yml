services:
  db:
    build:
      context: ./Database
      dockerfile: Dockerfile
    container_name: postgres_pgrouting
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - path: ./.env
        required: true
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 2s
      timeout: 5s
      retries: 5

  map-importer:
    image: debian:bullseye-slim
    depends_on:
      db:
        condition: service_healthy
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: db
    volumes:
      - ./Database/load_osm_data.sh:/script.sh
      - ./wait_for_it.sh:/wait-for-it.sh
    entrypoint: ["sh", "-c", "chmod +x /script.sh && /wait-for-it.sh db:5432 -- sh /script.sh"]
    env_file:
      - path: ./.env
        required: true
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: express_api
    ports:
      - "3000:3000"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: db
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules


volumes:
  postgres_data:
